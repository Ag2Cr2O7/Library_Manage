<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        p4QOyCpbWNYMNAA8F6RAEREAREQBERAEREB//9k=
</value>
  </data>
</root>